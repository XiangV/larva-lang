#!/usr/bin/env python
#coding=utf8

'''
带--run选项的larc.py调用的一个快捷实现
'''

import sys, os, getopt, subprocess

def main():
    #定位目录
    THIS_SCRIPT_NAME_SUFFIX = "/bin/larva"
    this_script_name = os.path.realpath(sys.argv[0])
    assert this_script_name.endswith(THIS_SCRIPT_NAME_SUFFIX)
    larva_dir = this_script_name[: -len(THIS_SCRIPT_NAME_SUFFIX)]
    larc_script_name = larva_dir + "/compiler/larc.py"

    def _show_usage_and_exit():
        print >> sys.stderr, """
编译并运行Larva模块

使用方法

    larva OPTIONS MAIN_MODULE_SPEC ARGS

各参数说明

    OPTIONS: [-u]

{u}

{MAIN_MODULE_SPEC}

    ARGS

        运行模块时的命令行参数
""".format(**eval(open(larva_dir + "/compiler/help").read()))
        sys.exit(1)

    #解析命令行参数
    try:
        opt_list, args = getopt.getopt(sys.argv[1 :], "m:")
    except getopt.GetoptError:
        _show_usage_and_exit()
    opt_map = dict(opt_list)
    if "-m" in opt_map:
        main_module_args = ["-m", opt_map["-m"]]
    else:
        if len(args) < 1:
            _show_usage_and_exit()
        main_module_args = [args[0]]
        args = args[1 :]

    #调用larc.py执行
    p = subprocess.Popen(["python", larc_script_name, "--run"] + main_module_args + ["--"] + args)
    sys.exit(p.wait())

if __name__ == "__main__":
    main()
