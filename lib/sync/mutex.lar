//Mutex需要接入context，用Chan实现

public class Mutex
{
    public Mutex()
    {
        this.ch = new Chan<int>(1);
    }

    public bool try_lock()
    {
        return this.ch.try_send(0);
    }

    public void lock()
    {
        this.ch.send(0);
    }

    public void unlock()
    {
        //解锁的时候不需要检查context是否被取消，用native代码
        !<<
        select {
        case <-this.m_ch.ch:
            //pass
        default:
        !>>
            abort("对一个未加锁的Mutex进行解锁操作");
        !<<
        }
        !>>
    }

    Chan<int> ch;
}
