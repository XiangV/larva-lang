import net, fiber;

class Client
{
    net.TcpConn conn;

    void run()
    {
        defer this.conn.close();

        var c = call_and_catch<Throwable>([-]{
            var buf = new char[10000];
            for (;;)
            {
                long recved_size = this.conn.read(buf);
                if (recved_size == 0)
                {
                    return;
                }
                this.conn.write(buf[: recved_size]);
            }
        });
        if (c !== nil)
        {
            println("client ends with exception [%s], traceback[%s]".(c.throwed().str(), c.traceback()));
            return;
        }
        println("client ends");
    }
}

public void main()
{
    var listener = new net.TcpListener(":9999");
    defer listener.close();

    println("server start");
    for (;;)
    {
        var c = call_and_catch<Throwable>([-]{
            var conn = listener.accept();
            fiber.start_new([-]{
                new Client{conn: conn}.run();
            });
        });
        if (c !== nil)
        {
            println("accept new client failed [%s][%s]".(c.throwed().str(), c.traceback()));
        }
    }
}
