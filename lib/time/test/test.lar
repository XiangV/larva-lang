import testing, time, math;

public void main()
{
    var r = new testing.CaseRunner();
    r.add_test_case("unix timestamp and sleep", []{
        public void call()
        {
            double sleep_time = 0.3;
            var t = time.time();
            time.sleep(sleep_time);
            var time_cost = time.time() - t;
            if (math.abs(time_cost - sleep_time) > 0.005)
            {
                testing.fail("sleep消耗的时间[%.6f秒]和预计时间[%.6f秒]相差太远".(time_cost, sleep_time));
            }
        }
    });
    r.add_test_case("format_time", []{
        public void call()
        {
            double t = 1234567890.625;
            var ts = time.format_time("2006-01-02 15:04:05.0000", t);
            var expecting_ts = "2009-02-14 07:31:30.6250";
            if (ts.eq(expecting_ts))
            {
                testing.fail("unix时间戳[%s]对应的时间是[%s]，但测试结果为[%s]".(t, ts, expecting_ts));
            }
        }
    });
    r.run();
}
