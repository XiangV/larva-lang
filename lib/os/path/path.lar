import os;

!<<

import (
    "path/filepath"
)

!>>

public bool is_abs(String path)
{
    !<<
    return filepath.IsAbs(lar_str_to_go_str(l_path))
    !>>
}

public String clean(String path)
{
    !<<
    return lar_str_from_go_str(filepath.Clean(lar_str_to_go_str(l_path)))
    !>>
}

public String abs(String path)
{
    if (is_abs(path))
    {
        return clean(path);
    }
    return join(new String[]{os.cwd(), path}.iter());
}

public String join(Iter<String> si)
{
    !<<
    sl := make([]string, 0, 16)
    for ; !l_si.lar_method_after_end(); l_si.lar_method_inc() {
        sl = append(sl, lar_str_to_go_str(l_si.lar_method_get()))
    }
    return lar_str_from_go_str(filepath.Join(sl...))
    !>>
}

public String base(String path)
{
    !<<
    return lar_str_from_go_str(filepath.Base(lar_str_to_go_str(l_path)))
    !>>
}

public String dir(String path)
{
    !<<
    return lar_str_from_go_str(filepath.Dir(lar_str_to_go_str(l_path)))
    !>>
}
