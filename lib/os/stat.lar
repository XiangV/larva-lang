!<<

import (
    "os"
)

!>>

public class FileInfo
{
    !<<
    fi os.FileInfo
    !>>

    public String repr()
    {
        return "<FileInfo [%s][%d][%s][%.3f]>".(this.name(), this.size(), this.mode(), this.modify_time());
    }

    public String name()
    {
        !<<
        return lar_str_from_go_str(this.fi.Name())
        !>>
    }

    public long size()
    {
        !<<
        return this.fi.Size()
        !>>
    }

    public String mode()
    {
        !<<
        return lar_str_from_go_str(this.fi.Mode().String())
        !>>
    }

    public uint perm()
    {
        !<<
        return uint32(this.fi.Mode().Perm())
        !>>
    }

    public bool is_dir()
    {
        !<<
        return this.fi.IsDir()
        !>>
    }

    public bool is_file()
    {
        !<<
        return this.fi.Mode().IsRegular()
        !>>
    }

    public bool is_sym_link()
    {
        !<<
        return this.fi.Mode() & os.ModeSymlink != 0
        !>>
    }

    public bool is_named_pipe()
    {
        !<<
        return this.fi.Mode() & os.ModeNamedPipe != 0
        !>>
    }

    public double modify_time()
    {
        !<<
        return float64(this.fi.ModTime().UnixNano()) / 1e9
        !>>
    }
}

!<<

func lar_go_str_@<<stat_impl>>(lar_fiber *lar_go_stru_fiber, fn *lar_cls_@<<:String>>,
                               stat_func func (name string) (os.FileInfo, error)) *lar_cls_@<<FileInfo>> {
    fi, err := stat_func(lar_str_to_go_str(fn))
    lar_func_@<<throw_on_go_err>>(lar_fiber, err)
    return &lar_cls_@<<FileInfo>>{fi}
}

!>>

public FileInfo lstat(String fn)
{
    !<<
    return lar_go_str_@<<stat_impl>>(lar_fiber, l_fn, os.Lstat)
    !>>
}

public FileInfo stat(String fn)
{
    !<<
    return lar_go_str_@<<stat_impl>>(lar_fiber, l_fn, os.Stat)
    !>>
}
