import time;

!<<

import (
    "math/rand"
)

!>>

//用启动时间戳初始化种子
void __init()
{
    var t = cast<long>(time.time() * 1e9);
    seed(t * t);
}

public void seed(long s)
{
    !<<
    rand.Seed(l_s)
    !>>
}

//生成一个[0.0, 1.0)的随机数
public double random()
{
    !<<
    return rand.Float64()
    !>>
}

//生成一个[0, n)的随机数，n必须大于0
public long rand_n(long n)
{
    if (n <= 0)
    {
        throw(new ValueError("无效的rand_n参数'%d'".(n)));
    }
    !<<
    return rand.Int63n(l_n)
    !>>
}

//将给定的容器随机打乱顺序
public void shuffle<S>(S s)
{
    //sz从大到小，循环s[: sz]区间，每次将最后一个元素和随机元素交换位置
    for (long sz = s.size(); sz > 1; -- sz)
    {
        long last_i = sz - 1;
        long rand_i = rand_n(sz);
        var tmp = s.get(last_i);
        s.set(last_i, s.get(rand_i));
        s.set(rand_i, tmp);
    }
}
